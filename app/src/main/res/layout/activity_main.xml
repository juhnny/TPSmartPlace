<?xml version="1.0" encoding="utf-8"?>
<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".activities.MainActivity">

    <!-- toolbar 권장 높이는 폰 56dp, 태블릿 80dp이지만 디바이스에 정해진 값을 쓰게 하자-->
    <androidx.appcompat.widget.Toolbar
        android:id="@+id/toolbar"
        android:layout_width="match_parent"
        android:layout_height="?attr/actionBarSize">

        <ImageView
            android:layout_width="32dp"
            android:layout_height="32dp"
            android:src="@drawable/ic_location_on_24"
            android:layout_marginRight="8dp"/>
        <EditText
            android:id="@+id/et_search"
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:background="@drawable/bg_all_round_square"
            android:inputType="text"
            android:hint="검색어 입력"
            android:gravity="center"
            android:textSize="16dp"
            android:textColor="@color/black"
            android:padding="8dp"
            android:layout_marginVertical="8dp"
            android:imeOptions="actionSearch"/>

    </androidx.appcompat.widget.Toolbar>

    <HorizontalScrollView
        android:id="@+id/scrollview"
        android:layout_width="match_parent"
        android:layout_height="48dp"
        android:layout_below="@id/toolbar"
        android:scrollbars="none">

        <!-- 레이아웃 양이 길어서 별도 xml에서 작성 -->
        <!--scrollview 안에서 horizontal일 때 너비는 무조건 wrap이 되어벌임,
        vertical일 때는 높이가 무조건 wrap이 됨-->
        <!-- include로 포함한 레이아웃에 있는 뷰들은 액티비티에서 findViewById를 쓰면 그들의 id로 곧바로 찾을 수 있지만
        ViewBinding으로 찾으려면 include할 때 id를 줘서 그 안에 속한 걸 찾는 방식으로 활용
        그런데 이것도 예전엔 많이 썼지만 자바 코드가 지저분해져서 잘 안쓴다고.. 그럼 지금은? -->
        <include
            android:id="@+id/layout_quick"
            layout="@layout/quick_list" />

    </HorizontalScrollView>

    <com.google.android.material.tabs.TabLayout
        android:id="@+id/layout_tab"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_below="@id/scrollview"
        app:tabIndicatorColor="@color/black"
        app:tabSelectedTextColor="@color/black"
        app:tabTextColor="#7A7A7A">

        <!--지도가 들어갈 것이기 때문에 Pager가 어울리지 않는다. -->
        <!-- Mediator를 안 쓰고 각 탭 항목들을 XML로 만들 수 있게 최근에 바뀌었다고-->
        <!--Pager와 연동할 때는 TabItem을 사용할 수는 없다.-->
        <com.google.android.material.tabs.TabItem
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="LIST"/>
        <com.google.android.material.tabs.TabItem
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="MAP"/>

    </com.google.android.material.tabs.TabLayout>

    <!--FrameLayout에 몇가지 기능이 추가된 Fragment containing 전용 뷰-->
    <androidx.fragment.app.FragmentContainerView
        android:id="@+id/container_fragment"
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        android:layout_below="@id/layout_tab"
        android:layout_marginTop="8dp" />

    <!--    <FrameLayout-->
    <!--        android:id="@+id/container_fragment"-->
    <!--        android:layout_width="match_parent"-->
    <!--        android:layout_height="match_parent"-->
    <!--        android:layout_below="@id/layout_tab"/>-->

    <ProgressBar
        android:id="@+id/progress_circular"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_centerInParent="true"
        style="@style/Widget.AppCompat.ProgressBar"
        android:indeterminateTint="@color/seoulblue"
        android:indeterminate="true"
        android:visibility="gone"/>
    <!--불확정적(indeterminate) 상태 표시 모드
    작업 진행이 언제 완료될 것인지를 정확한 수치 또는 범위 값으로 계산할 수 없는 경우
    예를 들어 네트워크 작업.
    프로그레스바(ProgressBar)의 기본 동작 모드이며,
    화면에 표시될 때 특정 값을 표시하지 않고 반복적인 애니메이션을 통해 어떠한 작업이 진행 중임을 보여줍니다.
    -->

</RelativeLayout>